CMSC122 Project - FoodButler
Team members: Guchuan(Gary) Song, Lisa Li, Jiacheng(Tony) Yan, Xinyi Ge

# if git cloned from the website, please do the following:
Before you try our application, please run:
1) $ sudo pip install yummly
   to pick up the python2 yummly library.
2) $ sudo pip3 install apiclient
   to get help make Google's api functioning
3) $ sudo pip3 install oauth2client
   to enable OAuth
4) $ sudo pip install --upgrade pip google-api-python-client
   to pick up google API library

#######################################################

NOTES ABOUT OUR PROGRAM:

As a result of the caching technique, recipe_db.json will be changed everytime 
a new recipe is returned by API.

Maximum time in the search form only refers to the preparation time. It 
might take a significantly longer time in reality. This is due to inaccurate 
information returned by API.

Some calories amount are unreasonable from the information the api returns. 
We have no way to deal with that.

The fewer the requirements entered in django, the faster our program runs and 
the greater the chance is to successfully generate the menu. If insufficient 
recipes are found for a given preference, an error message will appear at the 
bottom of the page explaining the reason.

Please make sure only enter reasonable inputs to django:
1) Only enter meal index for "Alternative Meal(s) A/B"
2) Please give reasonable range for calories, where the upper limit must be 
greater than the lower limit. In general, we recommend a range of greater than 
500 Kcal to maximize your chance of obtaining menu within this range. Please 
note that if we can't fulfill the calories requirement within a specified number 
of trials, we will omit this requirement.
3) There shouldn't be contradicting arguments, such as entering "chicken" as 
an ingredient to include and selecting "Vegan" as a dietary restriction, 
or entering "egg" as an ingredient to include and "Egg" as an allergy.

The file old_test_data contains some outputs generated by previous trials we 
ran as well as a folder of old Django codes.

The complete list of available input for ingredients to include/avoid can be 
found at /old_test_data/search_values.json or /old_test_data/search_values.txt

Entering an ingredient that is not in that list will make that input invalid 
and therefore be ignored.

#####################################################
LOCATION OF CODES

All the files the program runs on is in ..FoodButler/web 
FoodButler/web/menu is the Django app for our program. 
FoodButler/web/menu/views.py contains the codes for Django webpage
FoodButler/web/menu/templates/menu contains html templates for webpage layout
FoodButler/web/trial/urls.py contains the url configuration for the webpage

#####################################################


INSTRUCTION ON HOW TO OPEN THE SEARCH PAGE:

1. Go to ../FoodButler/web
2. Run command: python3 manage.py runserver
3. Open the link in the browser

INSTRUCTION ON HOW TO USE THE SEARCH PAGEG: 

Step 1. TO GENERATE A WEEKLY MENU:
    *From 'Ingredients to Avoid' to 'Maximum Calories Per Day (kcal)',
    the criterias can be left empty or filled in. However, if maximum cooking 
    time is desired as a search criteria, please include the time for both 
    breakfast and lunch/dinner. The same is applied to calories per day, 
    please enter both the min and max calories per day. For 'Ingredients 
    to Include' and 'Ingredients to Avoid', one can enter multiple keywords if 
    desires (separated by a space, all lower cases, plural form whenever 
    possible). Please press 'submit' to submit the form.

    Sample Inputs: 

    'Ingredients to Include': 'chicken'
    'Allergy': Peanut
    'Cuisine': Chinese
    'Maximum Breakfast Cooking Time (min)': 45
    'Maximum Lunch/Dinner Cooking Time (min)': 90
    'Minimum Calories Per Day (kcal)': 500
    'Maximum Calories Per Day (kcal)': 2000

Step 2. TO SWAP MEALS:
    *The search criterias above can be left as it is, there is no need to
    delete the inputs inside those form fields. 
    **If weekly menu is generated and one desires to swap meal, please
    enter the id of meal (appears on top right corner in each meal box)
    to drop in 'Alternative Meal(s) A' and the id of meal to switch into 
    in 'Alternative Meal(s) B'. One can also switch multiple meals at 
    the same time, however, the meals swapping will be randomized instead 
    of a one-to-one swap. Please make sure to enter the same numbers of 
    meal_id (separated by a space) in 'Alternative Meal(s) A' and 
    'Alternative Meal(s) B' and one can press 'submit' to proceed. 
    
    Sample Inputs: 

    'Alternative Meal(s) A': 12
    'Alternative Meal(s) B': 30

    OR 

    'Alternative Meal(s) A': 12 9 24
    'Alternative Meal(s) B': 30 32 36


Step 3. SHOPPING LIST: 
    *Please delete the inputs inside 'Alternative Meal(s) A' and 
    'Alternative Meal(s) B' before proceeding. 
    **To retrieve the shopping list for specific days, simply check the 
    boxes for those days and click submit. 

Step 4. SYNCH TO GOOGLE CALENDAR
    *Please uncheck all the boxes in 'Shopping list' before proceeding. 
    **To add weekly menu to Google Calendar, simply enter the date of when 
    you would like to start the weekly menu and click submit. Currently, the 
    default time for breakfast is 8:00, lunch is 11:30, and dinner is 17:00.
    Each meal has a 2-hour interval. If one desires to change the start time 
    for the meals, simply enter the alternate meal start time in the three 
    form fields below 'Menu Start Date'. (You can enter just one, two, or
    all three). 

    Sample Inputs:

    'Menu Start Date': 03/15/2016

    OR 

    'Menu Start Date': 03/15/2016
    'Lunch Start Time': 14:00

    OR 

    'Menu Start Date': 03/15/2016
    'Breakfast Start Time': 7:00
    'Lunch Start Time': 14:00
    'Dinner Start Time': 16:00






